#!/bin/bash

author_name=${GIT_AUTHOR_NAME}
if [[ -z "$author_name" ]]; then
  author_name=$(git config user.name)
fi

author_email=${GIT_AUTHOR_EMAIL}
if [[ -z "$author_email" ]]; then
  author_email=$(git config user.email)
fi

commiter_name=${GIT_COMMITTER_NAME}
if [[ -z "$commiter_name" ]]; then
  commiter_name=$(git config user.name)
fi

commiter_email=${GIT_COMMITTER_EMAIL}
if [[ -z "$commiter_email" ]]; then
  commiter_email=$(git config user.email)
fi

# A pre-commit hook which removes trailing whitespace and appends a newline
# to known text files which are missing one.
#
# See http://eng.wealthfront.com/2011/03/corrective-action-with-gits-pre-commit.html
files=$(git diff-index --name-status --cached HEAD | grep -v ^D | cut -c3-)
if [ "$files" != "" ]; then
  for f in $files; do
    # Only examine known text files
    if [[ "$f" =~ [.](conf|css|erb|feature|html|js|json|log|properties|rb|java|ru|txt|xml|yml)$ ]] && [[ ! "$f" =~ src/test/resources/serialized-messages ]] ; then
      # Add a linebreak to the file if it doesn't have one
      if [ "$(tail -c1 $f)" != '' ]; then
        echo >> "$f"
        git add "$f"
      fi

      # Remove trailing whitespace if it exists
      if grep -q "[[:blank:]]$" "$f"; then
        sed -i "" -e $'s/[ \t]*$//g' "$f"
        git add "$f"
      fi
    fi
  done
fi


PROJECT_PRE_COMMIT_HOOK=$(git rev-parse --show-toplevel)/.hooks/pre-commit

if [ -x "$PROJECT_PRE_COMMIT_HOOK" ]; then
  "$PROJECT_PRE_COMMIT_HOOK" $files
fi
