# Update path more
export PATH="/usr/local/bin:$PATH"

# Colors ----------------------------------------------------------
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32'

export CLICOLOR='1'

alias ls='ls -G'  # OS-X SPECIFIC - the -G command in OS-X is for colors, in Linux it's no groups
export LSCOLORS="gxDxFxdxCxExExhbadgxgx"

# Setup some colors to use later in interactive shell or scripts
export COLOR_NC='\e[0m' # No Color
export COLOR_WHITE='\e[1;37m'
export COLOR_BLACK='\e[0;30m'
export COLOR_BLUE='\e[0;34m'
export COLOR_LIGHT_BLUE='\e[1;34m'
export COLOR_GREEN='\e[0;32m'
export COLOR_LIGHT_GREEN='\e[1;32m'
export COLOR_CYAN='\e[0;36m'
export COLOR_LIGHT_CYAN='\e[1;36m'
export COLOR_RED='\e[0;31m'
export COLOR_LIGHT_RED='\e[1;31m'
export COLOR_PURPLE='\e[0;35m'
export COLOR_LIGHT_PURPLE='\e[1;35m'
export COLOR_BROWN='\e[0;33m'
export COLOR_YELLOW='\e[1;33m'
export COLOR_GRAY='\e[1;30m'
export COLOR_LIGHT_GRAY='\e[0;37m'

#### BASH History Options ####

# Number of lines to keep in the history file
export HISTSIZE=1000000
# bash history is timestamped as YYYY-MM-DD HH:MM:SS
export HISTTIMEFORMAT='%F %T '
# Don't put duplicate lines in the history.
export HISTCONTROL=ignoredups
# ... and ignore same successive entries.
export HISTCONTROL=ignoreboth

# add some more history logging: https://spin.atomicobject.com/2016/05/28/log-bash-history/
# export PROMPT_COMMAND='if [ "$(id -u)" -ne 0 ]; then echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history 1)" >> ~/dotfiles/bash-history-$(date "+%Y-%m-%d").log; fi'


##############################

# After each command, update LINES and COLUMNS to reflect the current window size
shopt -s checkwinsize
export PS1="\[${COLOR_LIGHT_GRAY}\]\w\[${COLOR_NC}\]\[${COLOR_LIGHT_CYAN}\]\$(__git_ps1 \" %s\")\[${COLOR_NC}\] "
export PS2='> '
export PS3='#? '
export PS4='+ '


function git_prompt_info {
  local ref=$(git symbolic-ref HEAD 2> /dev/null)
  # local gitst="$(git status 2> /dev/null)"
  # local remote_pattern="# Your branch is (.*) (of|by)"
  # local diverge_pattern="# Your branch and (.*) have diverged"
  #
  # if [[ ! ${gitst} =~ "working directory clean" ]]; then
  #   state="${PR_RED}⚡"
  # fi
  #
  # if [[ ${gitst} =~ ${remote_pattern} ]]; then
  #   if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
  #     remote="${PR_YELLOW}↑"
  #   else
  #     remote="${PR_YELLOW}↓"
  #   fi
  # fi
  #
  # if [[ ${gitst} =~ ${diverge_pattern} ]]; then
  #   remote="${PR_YELLOW}↕"
  # fi

  if [[ -n $ref ]]; then
    echo "${PR_CYAN}(${ref#refs/heads/}$remote$state${PR_CYAN})${PR_WHITE}"
  fi
}

# function smilie {
#   if [ "$?" = "0" ];  then
#     echo -e "%{$fg_bold[cyan]%}:)%{$reset_color%}";
#   else
#     echo -e "%{$fg_bold[red]%}:(%{$reset_color%}";
#   fi
# }

# PROMPT='${PR_BOLD_BLUE}%${PR_PWDLEN}<...<%~%<< $(git_prompt_info)${PR_BOLD_BLUE}$%{${reset_color}%} '
# PROMPT='${SSH_CONNECTION+"%{$fg_bold[cyan]%}%n@%m:"}%{$fg_bold[green]%}%~%{$reset_color%}$(git_prompt_info)${reset_color}:%? '

export PS1='${SSH_CONNECTION+"%{$fg_bold[cyan]%}%n@%m:"}%{$fg_bold[green]%}%~%{$reset_color%}$(git_prompt_info):%? '

# RPROMPT='%F{green}%~%f'

# expand functions in the prompt
setopt prompt_subst
